// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PenguinSteamerSecondSeason;

namespace PenguinSteamerSecondSeason.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190610091441_Excange2")]
    partial class Excange2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PenguinSteamerSecondSeason.Models.Candle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Begin");

                    b.Property<int?>("BoardId");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<decimal>("End");

                    b.Property<bool>("IsDeleted");

                    b.Property<decimal>("Max");

                    b.Property<decimal>("Min");

                    b.Property<int?>("TimeScaleId");

                    b.Property<string>("TimeStamp");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<decimal>("Volume");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.HasIndex("TimeScaleId");

                    b.ToTable("Candles");
                });

            modelBuilder.Entity("PenguinSteamerSecondSeason.Models.MBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("DisplayName");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("MCurrencyId");

                    b.Property<string>("Name");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("MCurrencyId");

                    b.ToTable("MBoards");
                });

            modelBuilder.Entity("PenguinSteamerSecondSeason.Models.MCurrency", b =>
                {
                    b.Property<int>("MCurrencyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("DisplayName");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("MCurrencyId");

                    b.ToTable("MCurrencies");
                });

            modelBuilder.Entity("PenguinSteamerSecondSeason.Models.MTimeScale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("DisplayName");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("SecondsValue");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("MTimeScales");
                });

            modelBuilder.Entity("PenguinSteamerSecondSeason.Models.Candle", b =>
                {
                    b.HasOne("PenguinSteamerSecondSeason.Models.MBoard", "Board")
                        .WithMany()
                        .HasForeignKey("BoardId");

                    b.HasOne("PenguinSteamerSecondSeason.Models.MTimeScale", "TimeScale")
                        .WithMany()
                        .HasForeignKey("TimeScaleId");
                });

            modelBuilder.Entity("PenguinSteamerSecondSeason.Models.MBoard", b =>
                {
                    b.HasOne("PenguinSteamerSecondSeason.Models.MCurrency", "MCurrency")
                        .WithMany()
                        .HasForeignKey("MCurrencyId");
                });
#pragma warning restore 612, 618
        }
    }
}
